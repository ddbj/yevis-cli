name: deploy

on:
  push:
    tags:
      - "*.*.*"

jobs:
  rename_version:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout ddbj/yevis-cli"
        uses: actions/checkout@v2
        with:
          ref: main
          fetch-depth: 1
      - name: "Set prev version to env"
        run: |
          PREV_VERSION=`gh release --repo ${{ github.repository }} list | grep Latest | awk '{print $1}'`
          echo "PREV_VERSION=$PREV_VERSION" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: "Rewrite version"
        run: |
          sed -i "s/$PREV_VERSION/${{ github.ref_name }}/g" Cargo.toml
          sed -i "s/$PREV_VERSION/${{ github.ref_name }}/g" Dockerfile
          sed -i "s/$PREV_VERSION/${{ github.ref_name }}/g" docker-compose.yml
      - name: "Add and push"
        run: |
          git remote set-url origin https://github-actions:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add Cargo.toml Dockerfile docker-compose.yml
          if ! git diff --exit-code --quiet; then
            git commit -m "Update version to ${{ github.ref_name }}"
            git push origin main
          fi

  build_binary:
    needs: [rename_version]
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout ddbj/yevis-cli"
        uses: actions/checkout@v2
        with:
          ref: main
          fetch-depth: 1
      - name: "Cache builder image"
        id: cache-builder-image
        uses: actions/cache@v2
        with:
          path: musl-builder-image
          key: musl-builder-image
      - name: "Pull and save builder image"
        if: steps.cache-builder-image.outputs.cache-hit != 'true'
        run: |
          docker pull ekidd/rust-musl-builder:stable
          docker save ekidd/rust-musl-builder:stable -o musl-builder-image
      - name: "Load builder image"
        run: docker load -i musl-builder-image
      - name: "Cache Rust"
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: "Build yevis binary"
        run: docker run --rm -u root -v `pwd`:/home/rust/src ekidd/rust-musl-builder:stable cargo build --release
      - name: "Upload yevis binary"
        uses: actions/upload-artifact@v2
        with:
          name: yevis
          path: target/x86_64-unknown-linux-musl/release/yevis

  create_release:
    needs: [build_binary]
    runs-on: ubuntu-latest
    steps:
      - name: "Download yevis binary"
        uses: actions/download-artifact@v2
        with:
          name: yevis
          path: yevis
      - name: "Release"
        run: gh release --repo ${{ github.repository }} create --title ${{ github.ref_name }} --target ${{ github.sha }} --generate-notes yevis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy_ghcr:
    needs: [create_release]
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout ddbj/yevis-cli"
        uses: actions/checkout@v2
        with:
          ref: main
          fetch-depth: 1
      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v1
      - name: "Login to GitHub Container Registry"
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: "Build and push"
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/yevis-cli:${{ github.ref_name }}
